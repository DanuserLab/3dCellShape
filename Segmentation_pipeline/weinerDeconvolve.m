function [image3D, image3DnotApodized] = weinerDeconvolve(image3D, OTF, weiner, apodizeFilter, saveNotApodized)

% weinerDeconvolve - weiner deconvolves and apodizes a 3D image 

% INPUTS:
%
% image3D - the image that will be deconvolved
%
% OTF - an optical transfer function that is the same size as the image
%
% weiner - the Weiner parameter, which is the inverse of the SNR
%
% apodizeFilter - an apodization filter in Fourier space to remove
%                 artifacts generated by the deconvolution


% Fourier transform the image
image3D = fftshift(fftn(image3D));

% perform the Weiner deconvolution
image3D = image3D.*OTF./((OTF.*OTF) + weiner); clear OTF

if saveNotApodized
    image3DnotApodized = ifftn(ifftshift(image3D));
    image3DnotApodized = abs(image3DnotApodized);
    image3DnotApodized = image3DnotApodized.*(image3DnotApodized > 0);
else
    image3DnotApodized = [];
end

% perform apodization
image3D = image3D.*apodizeFilter; clear apodizeFilter

% inverse Fourier transform back to the image domain
image3D = ifftn(ifftshift(image3D));

% take the absolute value of the image
image3D = abs(image3D);

% remove image values less than 0
image3D = image3D.*(image3D > 0);
